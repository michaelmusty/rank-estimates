intrinsic RankDatabaseAccessEntry(filename::MonStgElt) -> Any
  {Load the RankDatabaseObject in filename.}
  str := Read(filename);
  s := eval str;
  assert Type(s) eq RankDatabaseObject;
  return s;
end intrinsic;

intrinsic RankDatabaseFilenames() -> SeqEnum[MonStgElt]
  {Returns the filenames in RankDatabase as a SeqEnum. This assumes the current directory is RankDatabase.}
  directory := GetCurrentDirectory();
  ls := Pipe("ls", "");
  filenames := Split(ls, "\n");
  return filenames;
end intrinsic;

intrinsic RankDatabaseDeleteLineBreaks(str::MonStgElt) -> MonStgElt
  {Given a string str possibly with line breaks return a string without the line breaks.}
  str_new := "";
  for i in [1..#str] do
    if str[i] ne "\n" then
      str_new *:= str[i];
    end if;
  end for;
  return str_new;
end intrinsic;

intrinsic RankDatabaseWriteObject(s::RankDatabaseObject) -> MonStgElt
  {Write a (magma loadable) RankDatabaseObject s to s`RankDatabaseName.mag in working directory.}
  directory := GetCurrentDirectory();
  ChangeDirectory(directory);
  file := Sprintf("s := RankDatabaseObjectInitialize();\n");
  file *:= Sprintf("s`RankDatabaseName := \"%o\";\n", s`RankDatabaseName);
  file *:= Sprintf("s`RankDatabaseRank := %o;\n", s`RankDatabaseRank);
  file *:= Sprintf("s`RankDatabaseN := %o;\n", s`RankDatabaseN);
  file *:= Sprintf("s`RankDatabaseValue := %o;\n", s`RankDatabaseValue);
  file *:= Sprintf("return s;");
  filename := Sprintf("%o" cat ".mag", s`RankDatabaseName);
  Write(filename, file : Overwrite := true);
  returnText := Sprintf("%o written in directory %o\n", filename, directory);
  return returnText;
end intrinsic;

intrinsic RankDatabaseGenerate() -> MonStgElt
  {Generate the folder RankDatabase with all RankDatabaseObject files for the Cremona Database. This assumes that you want to create the database in the current directory and the optional directory should point where you want it if this is not the case. After the intrinsic is called the new current directory is RankDatabase.}
  System("mkdir RankDatabase");
  directory := GetCurrentDirectory();
  ChangeDirectory(directory cat "/RankDatabase/");
  db := CremonaDatabase();
  for c in {1..400000} do
    for i in {1..NumberOfIsogenyClasses(db, c)} do
      for j in {1..NumberOfCurves(db, c, i)} do
        E := EllipticCurve(db, c, i, j);
        name := CremonaReference(db, E);
        rank := Rank(E);
        s := RankDatabaseObjectInitialize();
        s`RankDatabaseName := name;
        s`RankDatabaseRank := rank;
        RankDatabaseWriteObject(s);
      end for;
    end for;
  end for;
  returnText := Sprintf("RankDatabase constructed in directory %o/RankDatabase\n", directory);
  returnText *:= Sprintf("current directory is %o\n", GetCurrentDirectory());
  return returnText;
end intrinsic;
